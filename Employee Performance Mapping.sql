CREATE DATABASE employee;
CREATE DATABASE project;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT
FROM employee.emp_record_table;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING
FROM employee.emp_record_table
WHERE EMP_RATING < 2;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING
FROM employee.emp_record_table
WHERE EMP_RATING between 2 and 4;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING

FROM employee.emp_record_table
WHERE EMP_RATING > 4;
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) AS 'NAME' FROM employee.emp_record_table
WHERE DEPT='FINANCE';
SELECT
m.EMP_ID, m.FIRST_NAME, m.LAST_NAME, m.ROLE,
m.EXP, m.DEPT, COUNT(e.EMP_ID) as 'EMP_COUNT'
FROM
employee.emp_record_table m
INNER JOIN employee.emp_record_table e
ON m.EMP_ID = e.MANAGER_ID
AND e.EMP_ID = e.MANAGER_ID
WHERE m.ROLE IN ('MANAGER', 'PRESIDENT', 'CEO') 
GROUP BY m.EMP_ID
ORDER BY m.EMP_ID;
SELECT e.EMP_ID as ID,
CONCAT(e.FIRST_NAME,' ',e.LAST_NAME) AS `NAME`,
e.DEPT
FROM employee.emp_record_table e
WHERE e.DEPT IN ('HEALTHCARE' )
UNION
SELECT e.EMP_ID as ID,
CONCAT(e.FIRST_NAME,' ',e.LAST_NAME) AS `NAME`,
e.DEPT
FROM employee.emp_record_table e
WHERE e.DEPT IN ('FINANCE')
ORDER BY DEPT, ID;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT, EMP_RATING,
MAX(EMP_RATING)
OVER (PARTITION BY DEPT) AS MAX_EMP_RATING
FROM employee.emp_record_table;
SELECT DISTINCT(ROLE), MAX(SALARY)
OVER (PARTITION BY ROLE) MAX_SALARY, MIN(SALARY)
OVER (PARTITION BY ROLE) MIN_SALARY
FROM employee.emp_record_table;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, DEPT, EXP,
RANK() OVER (ORDER BY EXP) EXP_RANK,
DENSE_RANK() OVER (ORDER BY EXP) EXP_DENSE_RANK
FROM employee.emp_record_table;
use employee;
CREATE VIEW Employee_View
AS
SELECT EMP_ID, FIRST_NAME, LAST_NAME, COUNTRY, SALARY
FROM employee.emp_record_table
WHERE SALARY > 6000;
SELECT * FROM Employee_view;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, ROLE, EXP
FROM employee.emp_record_table
WHERE EXP>10 ;
DELIMITER \\
CREATE PROCEDURE experienced_personal()
BEGIN

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, ROLE, EXP
FROM employee.emp_record_table WHERE EXP > 3;
END \\
DELIMITER ;
call experienced_personal();
DELIMITER $$
drop FUNCTION Employee_details;
CREATE FUNCTION Employee_details (EXP int)
RETURNS VARCHAR(255) DETERMINISTIC
BEGIN DECLARE Employee_details VARCHAR(255);
IF EXP <= 2 THEN SET Employee_details = 'JUNIOR DATA SCIENTIST';
ELSEIF EXP <= 5 THEN SET Employee_details = 'ASSOCIATE DATA SCIENTIST';
ELSEIF EXP <= 10 THEN SET Employee_details = 'SENIOR DATA SCIENTIST';
ELSEIF EXP <= 12 THEN SET Employee_details = 'LEAD DATA SCIENTIST';
ELSEIF EXP <= 16 THEN SET Employee_details = 'MANAGER';
END IF;
RETURN (Employee_details);
END$$
DELIMITER $$;
SELECT FIRST_NAME, LAST_NAME, DEPT, EXP, ROLE, Employee_details(EXP) as
DESIGNATION
FROM employee.emp_record_table ORDER BY EXP;
SELECT *FROM employee.emp_record_table
WHERE FIRST_NAME='Eric';
CREATE INDEX query1 ON employee.emp_record_table(FIRST_NAME);
SELECT *
FROM employee.emp_record_table
WHERE FIRST_NAME='Eric';
SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, SALARY, EMP_RATING,
(SALARY/20)*EMP_RATING AS BONUS
FROM employee.emp_record_table;
